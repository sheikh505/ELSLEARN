<section class="viual">
  <div class="visual_holder container">

    <div class="pull-left viual_left">
        <%= form_for :@user, :url => {:controller => 'home_page',
                                         :action => 'instructions'},
                     :html => {:onsubmit => "return validate_past_paper();"}     do |f| %>
      <div class="col">
        <div class="header_col">
          <p class="tabs_holde">Boards</p>
          <i class="arrow_right fa fa-caret-right"></i>
          <i class="arrow_down fa fa-caret-down"></i>
        </div>

        <div id="board_holder">
            <%= render 'bdc_list' %>
        </div>
      </div>


      <div class="col">
        <div class="header_col">
          <p class="tabs_holde">Degrees</p>
          <i class="arrow_right fa fa-caret-right"></i>
          <i class="arrow_down fa fa-caret-down"></i>
        </div>

        <div id="degree_holder">
        <%= render 'd_list' %>
        </div>

       </div>


      <div class="col">
        <div class="header_col">
          <p class="tabs_holde">Courses</p>
          <i class="arrow_right fa fa-caret-right"></i>
          <i class="arrow_down fa fa-caret-down"></i>
        </div>

        <div id="courses_holder">
            <%= render 'c_list' %>
        </div>

      </div>

      <div id="past_paper" class="col col_last_holder" style="display: none;">
        <div id="past_paper_container" >
          <input type="radio" name="pre_Past" value="1"><span>Past Paper</span>
          <input type="radio" name="pre_Past" value="2"><span> Create your own test </span>
        </div>
        <div id="past_paper_question_container" class="pre_question_holder" style="display: none;">
          <div class="row_custom">
            <%= label_tag :year %>
            <select id="year" name="year">
              <% i = Time.new.year.inspect.to_i - 1 %>
              <% 15.times{ %>
                      <option value="<%=i  %>"><%=i %></option>
              <% i-=1
                 } %>
            </select>
          </div>

          <div class="row_custom">
            <%= label_tag :session %>
                <input type="radio" name="session" value="May/June" checked>May/June
                <input type="radio" name="session" value="Nov/Dec" >Nov/Dec

          </div>
          <div class="row_custom">
            <select id="paper" name="paper">
              <option value="">[PLEASE SELECT PAPER]</option>
              <option value="mcq" selected >Paper P1</option>
            </select>
          </div>

          <div class="row_custom" id="test_container_1">
            <input type="submit" value="Proceed" id="past_paper_container" name="test_btn"  class="btn">
          </div>
        </div>
        <div id="question_type_container" class="pre_question_holder" style="display: none;">
          <div class="row_custom">
            <label class="lablel_check_box_left">
              <input id="mcq_checkbox" type="checkbox" name="question_types[]" value="1"><span>MCQ</span>
            </label>
            <label class="lablel_check_box_right">
              <select id="question_type_1" class="select">
                <% i = 1 %>
                <%25.times{ %>
                    <option><%= i %></option>
                    <% i+=1 %>
                <% } %>
              </select>

            </label>
          </div>
          <div class="row_custom">
            <label class="lablel_check_box_left"><input id="true_checkbox" type="checkbox" name="question_types[]" value="2"><span>True False</span></label>
            <label class="lablel_check_box_right">
              <select id="question_type_4" class="select">
                <% i = 1 %>
                <%25.times{ %>
                    <option><%= i %></option>
                    <% i+=1 %>
                <% } %>
              </select>
            </label>

          </div>
          <div class="row_custom">
            <label class="lablel_check_box_left"><input id="fill_checkbox" type="checkbox" name="question_types[]" value="3"><span>Fill in the blanks</span></label>
            <label class="lablel_check_box_right">
              <select id="question_type_2" class="select">
                <% i = 1 %>
                <%25.times{ %>
                    <option><%= i %></option>
                    <% i+=1 %>
                <% } %>
              </select>
            </label>
          </div>
          <div class="row_custom">
            <label class="lablel_check_box_left"><input id="des_checkbox" type="checkbox" name="question_types[]" value="4"><span>Descriptive</span></label>
            <label class="lablel_check_box_right">
              <select id="question_type_3" class="select">
                <% i = 1 %>
                <%25.times{ %>
                    <option><%= i %></option>
                    <% i+=1 %>
                <% } %>
              </select>
            </label>


          </div>
          <div style="display: block;" id="test_containerr">
            <input type="submit" act value="Proceed" id="test_btn_1" name="test_btn_1" class="btn">
          </div>
        </div>
      </div>
          <input type="hidden" id="role" name="role" value="2" >
          <input type="hidden" id="b_id" name="b_id" value="" >
          <input type="hidden" id="degree_id" name="degree_id" value="" >
          <input type="hidden" id="course_id" name="course_id" value="" >
          <input type="hidden" id="mcq" name="mcq" value="" >
          <input type="hidden" id="fill" name="fill" value="" >
          <input type="hidden" id="true_false" name="true_false" value="" >
          <input type="hidden" id="descriptive" name="descriptive" value="" >
      <% end %>

    </div>




    <div class="pull-right viual_right col">
      <div class="visual_right_holder">
        <h2>Enter Code</h2>
        <%= form_for "test_code", :url => {:controller => 'home_page', :action => 'quiz'},
                     :html => {:id => "test_code_form",:onsubmit => "return check_sign_in();"} do |f| %>
          <fieldset>
            <div class="pre_header_row">
              <input type="text" name="test_code" class="text" placeholder="Test Code" required="true">
              <button type="submit" class="btn btn-default modal_btn" href="#myModal">Submit</button>
            </div>

          </fieldset>
        <% end %>

      </div>


    </div>
    <div class="modal fade modal_custom" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h4 class="modal-title" id="myModalLabel">Elearning System
            </h4>
          </div>
          <div class="modal-body">
            <div class="row">
              <div class="user_form_holder">
                <div class="pre_modal_left pull-left">
                  <%= form_for @user, :url => {:controller => 'home_page', :action => 'quiz'},
                               :html => {:id => "registration_form",:onsubmit => "return create_user();"} do |f| %>
                      <% if @user.errors.any? %>
                          <div id="error_explanation">
                            <h2><%= pluralize(@user.errors.count, "error") %> prohibited this user from being saved:</h2>

                            <ul>
                              <% @user.errors.full_messages.each do |msg| %>
                                  <li><%= msg %></li>
                              <% end %>
                            </ul>
                          </div>
                      <% end %>


                      <h2>Create An Account</h2>
                      <div class="field">
                        <%= f.email_field :email,:required => true, :placeholder=>:Email, :autofocus => true ,:class=>'row_field' %>
                      </div>

                      <div class="field">
                        <%= f.text_field :name,:required => true, :placeholder=>:Name, :pattern => '^[a-zA-Z]+?[^\\\/:*?"<>|\n\r]+$' ,:class=>'row_field' %>
                      </div>

                      <div class="field">
                        <%= f.phone_field :phone, :placeholder=>:Phone, :required => true,:class=>'row_field' %>
                      </div>

                      <div class="field">
                        <% if @validatable %>
                            <em>(<%= @minimum_password_length %> characters minimum)</em>
                        <% end %>
                        <%= f.password_field :password, :placeholder=>:Password, :autocomplete=> "off" ,:required => true,:class=>'row_field' %>
                      </div>

                      <div class="field">
                        <%= f.password_field :password_confirmation, :placeholder=>:Password_confirmation, :autocomplete=> "off" ,:required => true,:class=>'row_field' %>

                      </div>
                      <div class="actions">
                        <%= f.submit "Register", :class => 'btn btn-large btn-inverse' %>
                      </div>
                  </div>
                      <input type="hidden" name="test_code_registration" class="text" placeholder="Test Code">

                  <% end %>

                  <div class="pre_model_right">
                    <%= form_for :new_user , :url => {:controller => 'home_page',
                                                     :action => 'quiz'},
                                 :html => {:id => "login_form",:onsubmit => "return sign_in();"}     do |f| %>
                        <h2>Log in</h2>
                        <div class="field">
                          <%= f.email_field :email,:required => true, :placeholder=>:Email, :autofocus => true ,:class=>'row_field' %>
                        </div>

                        <div class="field">
                          <% if @validatable %>
                              <em>(<%= @minimum_password_length %> characters minimum)</em>
                          <% end %>
                          <%= f.password_field :password, :placeholder=>:Password, :autocomplete=> "off" ,:required => true,:class=>'row_field' %>
                        </div>
                        <div style="float: left; width: 73.3%"><label id="flash_message" style="color:red; margin:0"></label></div>
                        <div class="actions" style="float:left">
                          <%= f.submit "Login", :onclick=>"sign_in()", :class => 'btn btn-large btn-inverse' %>
                        </div>
                        <input type="hidden" name="test_code_login" class="text" placeholder="Test Code">
                  <% end %>
                  </div>
                  </div>





            </div>
          </div>
          <div class="modal-footer m_footer_container">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          </div>
        </div>
      </div>
    </div>


  </div>


</section>
<section class="main">
  <div class="main_holder main_front container">
    <div class="box">
      <div class="box_header">
        <img src="assets/img1.jpg" alt="">
        <h2>Students</h2>
      </div>
      <div class="description">
        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
      </div>
    </div>
    <div class="box">
      <div class="box_header">
        <img src="assets/img2.jpg" alt="">
        <h2>Educators</h2>
      </div>
      <div class="description">
        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
      </div>
    </div>
    <div class="box">
      <div class="box_header">
        <img src="assets/img3.jpg" alt="">
        <h2>Adminstrator</h2>
      </div>
      <div class="description">
        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
      </div>
    </div>
  </div>
</section>





<!--<h3>IN PROGRESS ... COMING SOON !!</h3>-->


<script>

    $(document).ready(function() {
                $('#question_type_1').val(10);
                $('#question_type_2').val(10);
                $('#question_type_3').val(10);
                $('#question_type_4').val(10);

                $("input[name$='pre_Past']").click(function() {
                    var test = $(this).val();
                    if (test == "1") {
                        if (!$("div#past_paper_question_container").is(":visible")) {
                            $("div#question_type_container").hide();
                            $("div#past_paper_question_container").toggle("slide");
                        }
                    }
                    else
                    {
                        $("div#past_paper_question_container").hide();
                        $("div#question_type_container").toggle("slide");
                    }
                });

            }
    );

    function create_user()
    {
        var flag = true;
        $.get("home_page/create_user_registration", $("form#registration_form").serialize(), function (response) {
            if (response.success) {
                return true;
            }
            else {
                $('#flash_message').html("fail");
                flag = false;
            }

        }, "json")
        return flag;
    }
    function sign_in()
    {
        var flag = true;
        $.post("home_page/sign_in_user", $("form#login_form").serialize(), function (response) {
            if (response.success) {
                return true;
            }
            else {
                $('#flash_message').html("Invalid email or password");
                flag = false;
            }

        }, "json")
        return flag;
    }
    function check_sign_in()
    {
        if (!test_exists())
        {
            return false;
        }
        var flag = false;
        var test_code = $("input[name$='test_code']").val();
        $("input[name$='test_code_login']").val(test_code);
        $("input[name$='test_code_registration']").val(test_code);
        $.ajax({
            url:'/home_page/is_user_signed_in',
            type:'get',
            dataType:'json',
            processData:false,
            async:false,
            success:function (response) {
                if (response.success) {
                    flag = true;
                }
                else {
                    flag = false;
                    $('#myModal').modal('toggle');

                }

            },
            error:function (data) {
                flag = false;
            }
        });
        return flag;
    }
    function test_exists()
    {
        test_code = $("input[name$='test_code']").val();
        returnValue = 0;
        if (test_code.length>0)
        {
            $.ajax({
                url:'/quizzes/test_exists?test_code='+ test_code,
                type:'get',
                dataType:'json',
                async: false,
                success:function (response) {
                    if (response.success) {
                        returnValue = 1;
                    }
                    else {
                        alert("There is no test");
                        returnValue = 0;
                    }

                },
                error:function (response) {
                    returnValue = 0;
                }
            });

        }
        if (returnValue == 1){
            return true;
        }
        else
        {
            return false;
        }
    }
    function validate_past_paper()
    {
        course_id = $('#course_id').val($('.scourse').children('li').val()).val();
        degree_id = $('#degree_id').val($('.sdegree').children('li').val()).val();
        board_id = $('#b_id').val($('.sboard').children('li').val()).val();
        past_paper_flag = $("input[name$='pre_Past']:checked").val();
        returnValue = 0;
        if (past_paper_flag == "1")
        {
            year = $("#year").val();
            session = $("input[name$='session']").val();

            $.ajax({
                url:'/questions/questions_exits?year='+ year +
                                            "&session="+session + "&course_id="+course_id+
                                            "&degree_id="+degree_id+ "&board_id="+board_id+
                                            "&pre_Past="+ past_paper_flag,
                type:'get',
                dataType:'json',
                async: false,
                success:function (response) {
                    if (response.success) {
                        returnValue = 1;
                    }
                    else {
                        alert("Currently, there are no questions in it");
                        returnValue = 0;
                    }

                },
                error:function (response) {
                    returnValue = 0;
                }
            });

        }
        else
        {
            mcq = 0;
            true_false = 0;
            fill = 0;
            descriptive = 0;
            if ($("#mcq_checkbox").is(":checked")){
             mcq = $('#mcq').val($('#question_type_1').val()).val();
            }
            if ($("#true_checkbox").is(":checked")){
             true_false = $('#true_false').val($('#question_type_2').val()).val();
            }
            if ($("#fill_checkbox").is(":checked")){
             fill = $('#fill').val($('#question_type_3').val()).val();
            }
            if ($("#des_checkbox").is(":checked")){
             //descriptive = $('#question_type_4').val();
             descriptive = 0;
            }
            $.ajax({
                url:'/questions/questions_exits?&mcq='+mcq + "&true_false="+true_false +
                        "&fill="+fill +"&descriptive="+descriptive +
                        "&course_id="+course_id+
                        "&degree_id="+degree_id+ "&board_id="+board_id+
                        "&pre_Past="+ past_paper_flag,
                type:'get',
                dataType:'json',
                async: false,
                success:function (response) {
                    if (response.success) {
                        returnValue = 1;
                    }
                    else {
                        alert("Currently, there are no questions in it");
                        returnValue = 0;
                    }

                },
                error:function (response) {
                    returnValue = 0;
                }
            });
        }
        if (returnValue == 1){
            return true;
        }
        else
        {
            return false;
        }
    }
   function selectCourse(id)
    {

        if($('.scourse')){

            $('#past_paper').show();
        }

        if ($('#'+id).hasClass('scourse')){

            $('#'+id).css("color","#52CC52");


        }
        else {
            $('.scourse').css("color", "#000000");
            $('.scourse').removeClass('scourse');

            $('#' + id).css("color", "#52CC52");
            $('#' + id).addClass('scourse');
        }

        }

    function selectDegreeList(id,degree_id)
    {
        if ($('#'+id).hasClass('sdegree')){

        $('#'+id).css("color","#52CC52");


    }
    else {
        $('.sdegree').css("color","#000000");
        $('.sdegree').removeClass('sdegree');

        $('#'+id).css("color","#52CC52");
        $('#'+id).addClass('sdegree');

            board_id = $('.sboard').children('li').val();

        $.ajax({
            url:'/home_page/get_courses?degree_id='+degree_id+'&board_id='+board_id,
            type:'get',
            dataType:'html',
            processData:false,
            success:function (data) {
                $("#courses_holder").html(data);

            },
            error:function (data) {
                alert ('nae chalaa');
                //    window.location.reload();
            }
        });

     }
   }

    function selectBoardList(id,board_id){

    if ($('#'+id).hasClass('sboard')){

        $('#'+id).css("color","#52CC52");


    }
        else {
        $('.sboard').css("color","#000000");
        $('.sboard').removeClass('sboard');

        $('#'+id).css("color","#52CC52");
        $('#'+id).addClass('sboard');


        $.ajax({
            url:'/home_page/get_degrees?board_ids='+board_id,
            type:'get',
            dataType:'html',
            processData:false,
            success:function (data) {
                $("#degree_holder").html(data);
                $("#courses_holder").html('');
                $("#test_container").hide();

            },
            error:function (data) {
                alert ('nae chalaa');
                //    window.location.reload();
            }
        });

    }


    }


    function generate_test(course)
    {
        d_id = document.getElementById("degree_hidden_id").value;
        //alert(d_id)
        //alert (degree_id.value);
        //container = document.getElementById('course_container');
        $.ajax({
            url:'/home_page/get_tests?course_id='+course.value+'&degree_id='+d_id,
            type:'get',
            dataType:'html',
            processData:false,
            success:function (data) {
                $("#test_container").html(data);
                $("#test_container").show();
            },
            error:function (data) {
                alert ('nae chalaa');
                //    window.location.reload();
            }
        });

    }

    function getNotesCourses(id){

        $('#notes_'+id).css('color','#52CC52');
        $('#notes_'+id).addClass('notesDegree')

        $.ajax({
            url:'/home_page/get_notes_courses?degree_id='+id,
            type:'get',
            dataType:'html',
            processData:false,
            success:function (data) {

                $("#notes_course_div").html(data);

            },
            error:function (data) {
                alert ('Error');
                //    window.location.reload();
            }
        });


    }

        function getNotes(course_id){

            degree_id = $('.notesDegree')[0].id;
            //alert(degree_id + "---" + course_id);

            degree_id = degree_id.split('_')[1];
            $.ajax({
                url:'/home_page/get_notes?degree_id='+degree_id+'&course_id='+course_id,
                type:'get',
                dataType:'html',
                processData:false,
                success:function (data) {

                    $("#notes_div").html(data);

                },
                error:function (data) {
                    alert ('Error');
                    //    window.location.reload();
                }
            });


        }

</script>